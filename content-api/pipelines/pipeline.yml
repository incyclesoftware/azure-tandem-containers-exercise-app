trigger:
- master

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'ACR'
  imageRepository: 'content-api'
  containerRegistry: 'dbmacr.azurecr.io'
  dockerfilePath: '**/content-api/src/Dockerfile'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'


stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - script: |
        dotnet tool install --global GitVersion.Tool
        dotnet gitversion /output buildserver
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(GitVersion.NuGetVersionV2)

    - publish: $(Build.SourcesDirectory)/content-api/deploy
      artifact: manifests

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'dev'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: 'deploy'
              kubernetesServiceConnection: 'AKS'
              namespace: 'content-api'
              manifests: |
                $(Pipeline.Workspace)/manifests/content-api-namespace.yml
              containers: '$(containerRegistry)/$(imageRepository):$(GitVersion.NuGetVersionV2)'

          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: 'deploy'
              kubernetesServiceConnection: 'AKS'
              namespace: 'content-api'
              manifests: |
                $(Pipeline.Workspace)/manifests/content-api-deploy.yml
                $(Pipeline.Workspace)/manifests/content-api-service.yml
              containers: '$(containerRegistry)/$(imageRepository):$(GitVersion.NuGetVersionV2)'

